#!/bin/bash
#
# Name of the service for the first bot
bot_1="corrade-anya"
# Name of the service for the second bot
bot_2="corrade-angelus"
# Name of the service for the third bot
bot_3="corrade-easy"
all_bots="${bot_1} ${bot_2} ${bot_3}"
# Adjust this list of services for your custom deployment
all_services="${all_bots} nginx shoutcast"

services=
allbots=
usage() {
  printf "\nUsage: slsvc [-A] [-a] [-b] [-e] [-n] [-s] [-S service] [-u] [action]"
  printf "\nWhere:"
  printf "\n\t-A indicates perform action on all bots services"
  printf "\n\t-a indicates perform action on ${bot_1} service"
  printf "\n\t-b indicates perform action on ${bot_2} service"
  printf "\n\t-e indicates perform action on ${bot_3} service"
  printf "\n\t-n indicates perform action on nginx service"
  printf "\n\t-s indicates perform action on shoutcast service"
  printf "\n\t-S service specifies a service to perform action on"
  printf "\n\t   if none of -a,-e,-n,-s,-S is specified then services used are:"
  printf "\n\t     ${all_services}"
  printf "\n\taction indicates the action to perform [default: status]"
  printf "\n\t    typical actions include start/stop/enable/disable/restart/status"
  printf "\n\t -u displays this usage message and exits\n"
  exit 1
}

while getopts ":AabensS:u" flag; do
  case $flag in
    A)
      services="${all_bots}"
      ;;
    a)
      services="${services} ${bot_1}"
      ;;
    b)
      services="${services} ${bot_2}"
      ;;
    e)
      services="${services} ${bot_3}"
      ;;
    n)
      services="${services} nginx"
      ;;
    s)
      services="${services} shoutcast"
      ;;
    S)
      services="${services} ${OPTARG}"
      ;;
    u)
      usage
      ;;
    \?)
      echo "Invalid option: $flag"
      usage
      ;;
  esac
done
shift $(( OPTIND - 1 ))

action="$1"
[ "${action}" ] || action=status

[ "${services}" ] || services="${all_services}"

if [[ $EUID -eq 0 ]]
then
  SUDO=
else
  SUDO=sudo
fi

export TERM="xterm-256color"
for script in ${services}
do
  ${SUDO} systemctl ${action} ${script}.service
done
